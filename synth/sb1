#!/usr/bin/env perl
#
# Set synth to appropriate state, perhaps some drum mode, and adjust the
# FIXME bits as necessary, below. Synth may need to be set to accept
# remote control changes, or may need to be setup manually.
#
# Record on OpenBSD via:
#   aucat -o rec.wav & ./sb1 ; pkill aucat
#
# Then trim/fade/fixup with sox(1) or the like.

use strict;
use warnings;
use Time::HiRes qw(sleep usleep);

my $CONTROL_CHANGE = 11 << 4;
my $PROGRAM_CHANGE = 12 << 4;

my $ALL_NOTES_OFF = 123;

my $channel = 0;

my $midi_dev = shift // '/dev/rmidi0';

open my $midfh, '>', $midi_dev
  or die "could not open MIDI device '$midi_dev': $!\n";
binmode $midfh;
$midfh->autoflush(1);

my $x = 2;

$SIG{INT} = $SIG{TERM} = sub { silence(); exit 1 };

# FIXME synth specifics to select appropriate program
printf $midfh "%c%c%c", $CONTROL_CHANGE | $channel, 0,  63;
printf $midfh "%c%c%c", $CONTROL_CHANGE | $channel, 32, 32;
printf $midfh "%c%c",   $PROGRAM_CHANGE | $channel, 31 - 1;

# Main volume
printf $midfh "%c%c%c", $CONTROL_CHANGE | $channel, 7, 100;

sleep(0.1);    # time for aucat to get started?

while ( $x++ < 9277 ) {
  # select notes to play (drum instruments) via periodic function.
  # Fiddling with these numbers (and possibly excluding specific
  # numbers) likely required.
  my $note = int( cos( $x * 17 - 3 ) * 64 + 64 );
  # randomize loudness a bit
  my $velo = int( 83 + rand(7) );
  printf $midfh "\x90%c%c", $note, $velo;
  # slightly below a shelf which fills the synth with events. YMMV.
  usleep(9973);
}
usleep(79774);
silence();
sleep(2.671);

sub silence {
  printf $midfh "%c%c%c", $CONTROL_CHANGE | $channel, $ALL_NOTES_OFF, 0;
}
